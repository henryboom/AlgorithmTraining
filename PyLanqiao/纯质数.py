# 埃氏筛得到1-n的质数
# 试题 B: 纯质数
#
# 本题总分：5 分
#
# 【问题描述】
#
# 如果一个正整数只有 1 11 和它本身两个约数，则称为一个质数（又称素数）。
#
# 前几个质数是：2 , 3 , 5 , 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 , . . .
#
# 如果一个质数的所有十进制数位都是质数，我们称它为纯质数。例如：2 , 3 , 5 , 7 , 23 , 37都是纯质数，而 11 , 13 , 17 , 19 , 29 , 31 11, 13, 17, 19, 29, 31 不是纯质数。当然 1 , 4 , 35 也不是纯质数。
#
# 请问，在1 到 20210605 中，有多少个纯质数？
#
# 【思路分析】
#
#     这道题还是比较简单，最直接的想法就是循环判断，这里的1~20210605中的质数我们可以利用埃氏筛来得到
#
#     接着循环判断每一位就很快出结果了。
#
#     除此之外，我还看到一个挺好的思路，我们已经知道了0,4,6,8,9这些肯定不是质数，所以位数含这些一定不是纯质数，所以我们只会对无这些数的数进行判断是否是质数，这样可能也会更加快，不过基本思路相同。
def get_prime(n):
    prime = [1] * (n + 1)
    prime[0] = 0
    prime[1] = 0
    for i in range(2, int(n ** 0.5) + 1):
        if prime[i] == 1:
            for j in range(2 * i, n + 1, i):
                prime[j] = 0
    return prime


cnt = 0
n = 20210605
prime = get_prime(n)
for i in range(1,n+1):
    if prime[i]:
        flag = True
        for j in str(i):
            j = int(j)
            if prime[j] == 0:
                flag = False
                break
        if flag:
            cnt += 1

print(cnt)
