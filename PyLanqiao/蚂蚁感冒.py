n = int(input())
dis = list(map(int, input().split()))

# k 为第一只感冒蚂蚁距离左边的距离
k = abs(dis[0])

# left  表示第一只感冒蚂蚁的左侧, 头向右蚂蚁的数量
# right 表示第一只感冒蚂蚁的右侧, 头向左蚂蚁的数量
left = right = 0

# 计算最终感冒蚂蚁
for i in dis[1:]:
    # 对于第一只感冒蚂蚁的左侧, 如果头向右
    if 0 < i < k:
        left += 1
    # 对于第一只感冒蚂蚁的右侧, 如果头向左
    if i < 0 and abs(i) > k:
        right += 1

# 如果第一只感冒的蚂蚁头向左, 且 left 不为 0
# 或 第一只感冒的蚂蚁头向右, 且 right 不为 0
if (dis[0] < 0 and left != 0) or (dis[0] > 0 and right != 0):
    print(left + right + 1)
else:
    print(1)

    # 这里有一个值得思考的点就是，这里直接算的是朝向感冒蚂蚁的蚂蚁直接算是感冒，不朝向的蚂蚁不计算，
    # 因为题目要求说了，相遇就会转向，那么我们想象成相遇就会擦肩而过，而感冒的会被感染，这样就能解释通了，无论怎么走，两个对向移动的蚂蚁都会感冒，而反向的蚂蚁直接就安全的出去 了
